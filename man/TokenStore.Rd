% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/token-store.R
\name{TokenStore}
\alias{TokenStore}
\title{Token Store Class}
\description{
The TokenStore class provides secure storage and retrieval of authentication
tokens for different mapping providers. It supports environment variable
loading, validation, and provider-specific token management.
}
\details{
R6 class for managing API tokens and keys across multiple providers.
}
\examples{
\donttest{
# Create token store
store <- TokenStore$new()
store$set_token("mapbox", "pk.your_token_here")
token <- store$get_token("mapbox")
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{tokens}}{Named list of provider tokens}

\item{\code{encrypted}}{Logical indicating if tokens should be encrypted}

\item{\code{env_vars}}{List of environment variable names to check}

\item{\code{tokens}}{Provider token storage}

\item{\code{encrypted}}{Encryption flag}

\item{\code{env_vars}}{Environment variable mappings
Initialize Token Store

Create a new token store instance.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TokenStore-new}{\code{TokenStore$new()}}
\item \href{#method-TokenStore-set_token}{\code{TokenStore$set_token()}}
\item \href{#method-TokenStore-get_token}{\code{TokenStore$get_token()}}
\item \href{#method-TokenStore-remove_token}{\code{TokenStore$remove_token()}}
\item \href{#method-TokenStore-list_tokens}{\code{TokenStore$list_tokens()}}
\item \href{#method-TokenStore-clear_all_tokens}{\code{TokenStore$clear_all_tokens()}}
\item \href{#method-TokenStore-load_from_environment}{\code{TokenStore$load_from_environment()}}
\item \href{#method-TokenStore-validate_token}{\code{TokenStore$validate_token()}}
\item \href{#method-TokenStore-requires_authentication}{\code{TokenStore$requires_authentication()}}
\item \href{#method-TokenStore-clone}{\code{TokenStore$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TokenStore-new"></a>}}
\if{latex}{\out{\hypertarget{method-TokenStore-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TokenStore$new(encrypted = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{encrypted}}{Logical indicating if tokens should be encrypted}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
New TokenStore instance
Set Token

Store a token for a specific provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TokenStore-set_token"></a>}}
\if{latex}{\out{\hypertarget{method-TokenStore-set_token}{}}}
\subsection{Method \code{set_token()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TokenStore$set_token(provider, token, scope = "default")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider}}{Character string identifying the provider}

\item{\code{token}}{Character string containing the token}

\item{\code{scope}}{Character string for token scope (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Get Token

Retrieve a token for a specific provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TokenStore-get_token"></a>}}
\if{latex}{\out{\hypertarget{method-TokenStore-get_token}{}}}
\subsection{Method \code{get_token()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TokenStore$get_token(provider, scope = "default")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider}}{Character string identifying the provider}

\item{\code{scope}}{Character string for token scope (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string containing the token or NULL if not found
Remove Token

Remove a token for a specific provider and scope.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TokenStore-remove_token"></a>}}
\if{latex}{\out{\hypertarget{method-TokenStore-remove_token}{}}}
\subsection{Method \code{remove_token()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TokenStore$remove_token(provider, scope = "default")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider}}{Character string identifying the provider}

\item{\code{scope}}{Character string for token scope (default: "default")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
List Tokens

Get list of all stored tokens by provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TokenStore-list_tokens"></a>}}
\if{latex}{\out{\hypertarget{method-TokenStore-list_tokens}{}}}
\subsection{Method \code{list_tokens()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TokenStore$list_tokens(show_values = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{show_values}}{Logical indicating if token values should be shown}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Named list of provider tokens
Clear All Tokens

Remove all stored tokens.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TokenStore-clear_all_tokens"></a>}}
\if{latex}{\out{\hypertarget{method-TokenStore-clear_all_tokens}{}}}
\subsection{Method \code{clear_all_tokens()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TokenStore$clear_all_tokens()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible self for method chaining
Load from Environment

Load tokens from environment variables.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TokenStore-load_from_environment"></a>}}
\if{latex}{\out{\hypertarget{method-TokenStore-load_from_environment}{}}}
\subsection{Method \code{load_from_environment()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TokenStore$load_from_environment()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible self for method chaining
Validate Token

Validate a token for a specific provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TokenStore-validate_token"></a>}}
\if{latex}{\out{\hypertarget{method-TokenStore-validate_token}{}}}
\subsection{Method \code{validate_token()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TokenStore$validate_token(provider, token = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider}}{Character string identifying the provider}

\item{\code{token}}{Character string containing token to validate (optional)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical indicating if token is valid
Check Authentication Required

Check if a provider requires authentication.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TokenStore-requires_authentication"></a>}}
\if{latex}{\out{\hypertarget{method-TokenStore-requires_authentication}{}}}
\subsection{Method \code{requires_authentication()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TokenStore$requires_authentication(provider)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider}}{Character string identifying the provider}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical indicating if authentication is required
Encrypt Token

Encrypt a token for secure storage.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TokenStore-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TokenStore-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TokenStore$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
