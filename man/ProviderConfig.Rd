% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/provider-config.R
\name{ProviderConfig}
\alias{ProviderConfig}
\title{Provider Configuration Class}
\description{
The ProviderConfig class encapsulates all configuration settings for a
map provider, including authentication requirements, supported features,
coordinate systems, and default styles.
}
\details{
R6 class for managing provider-specific configuration settings.
}
\examples{
\donttest{
# Create a provider configuration
config <- ProviderConfig$new(
  name = "mapbox",
  type = "webgl",
  authentication_required = TRUE,
  supported_features = list(
    "3d_terrain" = TRUE,
    "custom_styles" = TRUE,
    "vector_tiles" = TRUE
  ),
  coordinate_system = "EPSG:4326",
  default_style = "mapbox://styles/mapbox/streets-v11"
)
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{Character string identifying the provider}

\item{\code{type}}{Character string indicating provider type}

\item{\code{authentication_required}}{Logical indicating if authentication is needed}

\item{\code{supported_features}}{List of supported features and capabilities}

\item{\code{coordinate_system}}{Character string indicating default coordinate system}

\item{\code{default_style}}{Character string indicating default map style}

\item{\code{api_endpoints}}{List of API endpoints for the provider}

\item{\code{rate_limits}}{List of rate limiting information}

\item{\code{name}}{Provider name}

\item{\code{type}}{Provider type}

\item{\code{authentication_required}}{Authentication requirement flag}

\item{\code{supported_features}}{List of supported features}

\item{\code{coordinate_system}}{Default coordinate system}

\item{\code{default_style}}{Default map style}

\item{\code{api_endpoints}}{API endpoints}

\item{\code{rate_limits}}{Rate limiting information
Initialize Provider Configuration

Create a new provider configuration instance.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ProviderConfig-new}{\code{ProviderConfig$new()}}
\item \href{#method-ProviderConfig-validate}{\code{ProviderConfig$validate()}}
\item \href{#method-ProviderConfig-supports_feature}{\code{ProviderConfig$supports_feature()}}
\item \href{#method-ProviderConfig-get_summary}{\code{ProviderConfig$get_summary()}}
\item \href{#method-ProviderConfig-update}{\code{ProviderConfig$update()}}
\item \href{#method-ProviderConfig-clone}{\code{ProviderConfig$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderConfig-new"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderConfig-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderConfig$new(
  name,
  type,
  authentication_required,
  supported_features,
  coordinate_system,
  default_style,
  api_endpoints = list(),
  rate_limits = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character string identifying the provider}

\item{\code{type}}{Character string indicating provider type}

\item{\code{authentication_required}}{Logical indicating if auth is needed}

\item{\code{supported_features}}{List of supported features}

\item{\code{coordinate_system}}{Character string for coordinate system}

\item{\code{default_style}}{Character string for default style}

\item{\code{api_endpoints}}{List of API endpoints (optional)}

\item{\code{rate_limits}}{List of rate limiting info (optional)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
New ProviderConfig instance
Validate Configuration

Validate that all required configuration fields are present and valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderConfig-validate"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderConfig-validate}{}}}
\subsection{Method \code{validate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderConfig$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical indicating if configuration is valid
Check Feature Support

Check if a specific feature is supported by this provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderConfig-supports_feature"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderConfig-supports_feature}{}}}
\subsection{Method \code{supports_feature()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderConfig$supports_feature(feature)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{feature}}{Character string identifying the feature}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical indicating if feature is supported
Get Configuration Summary

Get a summary of the provider configuration.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderConfig-get_summary"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderConfig-get_summary}{}}}
\subsection{Method \code{get_summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderConfig$get_summary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List containing configuration summary
Update Configuration

Update specific configuration fields.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderConfig-update"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderConfig-update}{}}}
\subsection{Method \code{update()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderConfig$update(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Named arguments for fields to update}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderConfig-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderConfig-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderConfig$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
