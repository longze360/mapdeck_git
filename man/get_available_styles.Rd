% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_styles.R, R/style-management.R
\name{get_available_styles}
\alias{get_available_styles}
\title{Get Available Map Styles}
\usage{
get_available_styles(
  provider = NULL,
  category = NULL,
  include_provider_specific = FALSE
)

get_available_styles(
  provider = NULL,
  category = NULL,
  include_provider_specific = FALSE
)
}
\arguments{
\item{provider}{Character string identifying the provider (optional). If NULL,
returns styles available across all providers.}

\item{category}{Character string to filter styles by category (optional).
Categories include: "basic", "monochrome", "satellite", "terrain", "artistic", 
"navigation", "themed".}

\item{include_provider_specific}{Logical indicating if provider-specific style
identifiers should be included (default: FALSE).}
}
\value{
Character vector of available style names.

Character vector of available style names, or named list if 
  include_provider_specific is TRUE.
}
\description{
Get list of available map styles for a specific provider or all providers.

This function returns the available map styles that can be used with a specific
provider or across all providers. It provides both generic style names that
work across providers and provider-specific style identifiers.
}
\details{
Get a list of available map styles for a specific provider or all providers.


The function returns generic style names that are mapped to provider-specific
styles internally. Common generic styles include:
\itemize{
  \item \strong{Basic styles}: "streets", "outdoors"
  \item \strong{Monochrome}: "light", "dark"
  \item \strong{Satellite}: "satellite", "satellite_streets", "hybrid"
  \item \strong{Terrain}: "terrain"
  \item \strong{Artistic}: "watercolor", "toner"
  \item \strong{Navigation}: "navigation_day", "navigation_night"
  \item \strong{Themed}: "blue", "wine", "midnight"
}

Provider-specific styles use different formats:
\itemize{
  \item \strong{Mapbox}: URLs like "mapbox://styles/mapbox/streets-v11"
  \item \strong{Leaflet}: Tile provider names like "OpenStreetMap", "CartoDB.Positron"
  \item \strong{OpenLayers}: Source names like "OSM", "CartoDB.Positron"
  \item \strong{Gaode}: URLs like "amap://styles/normal"
  \item \strong{Baidu}: Style names like "normal", "satellite"
}
}
\examples{
\donttest{

## Get all generic styles
get_available_styles()

## Get styles by category
get_available_styles(category = "satellite")
get_available_styles(category = "monochrome")

## Get provider-specific styles
get_available_styles(provider = "mapbox")
get_available_styles(provider = "leaflet")

}

\donttest{
# Get all available generic styles
all_styles <- get_available_styles()
print(all_styles)

# Get styles for specific provider
mapbox_styles <- get_available_styles("mapbox")
leaflet_styles <- get_available_styles("leaflet")

# Get styles by category
satellite_styles <- get_available_styles(category = "satellite")
monochrome_styles <- get_available_styles(category = "monochrome")

# Get provider-specific style identifiers
detailed_styles <- get_available_styles("mapbox", include_provider_specific = TRUE)
print(detailed_styles)

# Check what styles are available for Chinese providers
gaode_styles <- get_available_styles("gaode")
baidu_styles <- get_available_styles("baidu")
}

}
\seealso{
\code{\link{mapdeck_style}}, \code{\link{validate_map_style}}, 
  \code{\link{apply_map_theme}}
}
