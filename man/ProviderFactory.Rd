% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/provider-factory.R
\name{ProviderFactory}
\alias{ProviderFactory}
\title{Provider Factory Class}
\description{
The ProviderFactory class provides methods for creating provider instances
based on provider names and configurations. It uses the registry to
look up provider information and create appropriate instances.
}
\details{
R6 class for creating provider instances using the factory pattern.
}
\examples{
\donttest{
# Create and use provider factory
factory <- ProviderFactory$new()
provider <- factory$create_provider("mapbox", list(token = "your_token"))
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{registry}}{ProviderRegistry instance}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ProviderFactory-new}{\code{ProviderFactory$new()}}
\item \href{#method-ProviderFactory-create_provider}{\code{ProviderFactory$create_provider()}}
\item \href{#method-ProviderFactory-merge_configs}{\code{ProviderFactory$merge_configs()}}
\item \href{#method-ProviderFactory-get_available_providers}{\code{ProviderFactory$get_available_providers()}}
\item \href{#method-ProviderFactory-get_provider_capabilities}{\code{ProviderFactory$get_provider_capabilities()}}
\item \href{#method-ProviderFactory-validate_provider_config}{\code{ProviderFactory$validate_provider_config()}}
\item \href{#method-ProviderFactory-clone}{\code{ProviderFactory$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderFactory-new"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderFactory-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderFactory$new(registry = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{registry}}{ProviderRegistry instance (optional)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
New ProviderFactory instance
Create Provider Instance

Create a new provider instance based on provider name and configuration.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderFactory-create_provider"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderFactory-create_provider}{}}}
\subsection{Method \code{create_provider()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderFactory$create_provider(provider_name, config = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider_name}}{Character string identifying the provider}

\item{\code{config}}{List containing provider-specific configuration}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Provider instance or NULL if creation fails
Merge Configurations

Merge user-provided configuration with default provider configuration.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderFactory-merge_configs"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderFactory-merge_configs}{}}}
\subsection{Method \code{merge_configs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderFactory$merge_configs(default_config, user_config)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{default_config}}{ProviderConfig object with defaults}

\item{\code{user_config}}{List with user-provided settings}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List with merged configuration
Get Available Providers

Get list of available provider names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderFactory-get_available_providers"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderFactory-get_available_providers}{}}}
\subsection{Method \code{get_available_providers()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderFactory$get_available_providers()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector of provider names
Get Provider Capabilities

Get capabilities for a specific provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderFactory-get_provider_capabilities"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderFactory-get_provider_capabilities}{}}}
\subsection{Method \code{get_provider_capabilities()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderFactory$get_provider_capabilities(provider_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider_name}}{Character string identifying the provider}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List containing provider capabilities
Validate Provider Configuration

Validate configuration for a specific provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderFactory-validate_provider_config"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderFactory-validate_provider_config}{}}}
\subsection{Method \code{validate_provider_config()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderFactory$validate_provider_config(provider_name, config)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider_name}}{Character string identifying the provider}

\item{\code{config}}{List containing configuration to validate}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical indicating if configuration is valid
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderFactory-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderFactory-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderFactory$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
