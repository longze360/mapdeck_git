% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/style-management.R
\name{StyleResolver}
\alias{StyleResolver}
\title{Style Resolver Class}
\description{
The StyleResolver class provides a centralized system for mapping generic
style names to provider-specific style identifiers, enabling consistent
styling across different map providers.
}
\details{
R6 class for resolving generic style names to provider-specific styles.
}
\examples{
\donttest{
# Create style resolver
resolver <- StyleResolver$new()
style <- resolver$resolve_style("streets", "mapbox")
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{style_mappings}}{Style mappings for providers}

\item{\code{default_styles}}{Default styles for providers}

\item{\code{style_categories}}{Style categories
Initialize Style Resolver

Create a new style resolver instance.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-StyleResolver-new}{\code{StyleResolver$new()}}
\item \href{#method-StyleResolver-resolve_style}{\code{StyleResolver$resolve_style()}}
\item \href{#method-StyleResolver-get_default_style}{\code{StyleResolver$get_default_style()}}
\item \href{#method-StyleResolver-get_available_styles}{\code{StyleResolver$get_available_styles()}}
\item \href{#method-StyleResolver-get_style_categories}{\code{StyleResolver$get_style_categories()}}
\item \href{#method-StyleResolver-add_style_mapping}{\code{StyleResolver$add_style_mapping()}}
\item \href{#method-StyleResolver-create_default_mappings}{\code{StyleResolver$create_default_mappings()}}
\item \href{#method-StyleResolver-create_default_styles}{\code{StyleResolver$create_default_styles()}}
\item \href{#method-StyleResolver-create_style_categories}{\code{StyleResolver$create_style_categories()}}
\item \href{#method-StyleResolver-clone}{\code{StyleResolver$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StyleResolver-new"></a>}}
\if{latex}{\out{\hypertarget{method-StyleResolver-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StyleResolver$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
New StyleResolver instance
Resolve Style

Resolve a generic style name to a provider-specific style.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StyleResolver-resolve_style"></a>}}
\if{latex}{\out{\hypertarget{method-StyleResolver-resolve_style}{}}}
\subsection{Method \code{resolve_style()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StyleResolver$resolve_style(style_name, provider_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{style_name}}{Character string identifying the generic style}

\item{\code{provider_name}}{Character string identifying the provider}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string containing provider-specific style identifier
Get Default Style

Get the default style for a provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StyleResolver-get_default_style"></a>}}
\if{latex}{\out{\hypertarget{method-StyleResolver-get_default_style}{}}}
\subsection{Method \code{get_default_style()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StyleResolver$get_default_style(provider_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider_name}}{Character string identifying the provider}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string containing default style identifier
Get Available Styles

Get list of available generic style names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StyleResolver-get_available_styles"></a>}}
\if{latex}{\out{\hypertarget{method-StyleResolver-get_available_styles}{}}}
\subsection{Method \code{get_available_styles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StyleResolver$get_available_styles(category = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{category}}{Character string to filter by category (optional)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character vector of available style names
Get Style Categories

Get list of available style categories.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StyleResolver-get_style_categories"></a>}}
\if{latex}{\out{\hypertarget{method-StyleResolver-get_style_categories}{}}}
\subsection{Method \code{get_style_categories()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StyleResolver$get_style_categories()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector of category names
Add Style Mapping

Add a new style mapping for a provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StyleResolver-add_style_mapping"></a>}}
\if{latex}{\out{\hypertarget{method-StyleResolver-add_style_mapping}{}}}
\subsection{Method \code{add_style_mapping()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StyleResolver$add_style_mapping(generic_name, provider_name, provider_style)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{generic_name}}{Character string for generic style name}

\item{\code{provider_name}}{Character string identifying the provider}

\item{\code{provider_style}}{Character string for provider-specific style}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Create Default Mappings

Create default style mappings for all providers.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StyleResolver-create_default_mappings"></a>}}
\if{latex}{\out{\hypertarget{method-StyleResolver-create_default_mappings}{}}}
\subsection{Method \code{create_default_mappings()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StyleResolver$create_default_mappings()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of style mappings
Create Default Styles

Create default styles for each provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StyleResolver-create_default_styles"></a>}}
\if{latex}{\out{\hypertarget{method-StyleResolver-create_default_styles}{}}}
\subsection{Method \code{create_default_styles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StyleResolver$create_default_styles()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of default styles
Create Style Categories

Create style categories for organization.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StyleResolver-create_style_categories"></a>}}
\if{latex}{\out{\hypertarget{method-StyleResolver-create_style_categories}{}}}
\subsection{Method \code{create_style_categories()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StyleResolver$create_style_categories()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of style categories
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StyleResolver-clone"></a>}}
\if{latex}{\out{\hypertarget{method-StyleResolver-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StyleResolver$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
