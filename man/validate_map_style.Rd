% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_styles.R, R/style-management.R
\name{validate_map_style}
\alias{validate_map_style}
\title{Validate Map Style}
\usage{
validate_map_style(style, provider, detailed = FALSE)

validate_map_style(style, provider, detailed = FALSE)
}
\arguments{
\item{style}{Character string or list containing style specification}

\item{provider}{Character string identifying the provider}

\item{detailed}{Logical indicating if detailed validation results should be returned}
}
\value{
Logical indicating if the style is valid for the provider.

Logical indicating validity, or list with detailed results if detailed=TRUE
}
\description{
Validate that a style is compatible with a specific provider.

This function validates whether a given style specification is compatible
with a specific map provider, checking format, requirements, and feature support.
}
\details{
Validate that a map style is compatible with a specific provider.


The validation checks:
\itemize{
  \item Style format compatibility with provider
  \item Required fields and structure
  \item Feature support and limitations
  \item URL patterns and accessibility
}

Provider-specific validation:
\itemize{
  \item \strong{Mapbox}: Validates Mapbox style URLs and custom style objects
  \item \strong{Leaflet}: Validates tile provider names and URLs
  \item \strong{OpenLayers}: Validates source configurations
  \item \strong{Gaode}: Validates Gaode style URLs and names
  \item \strong{Baidu}: Validates Baidu style names
}
}
\examples{
\donttest{

## Validate styles for different providers
validate_map_style("streets", "mapbox")
validate_map_style("OpenStreetMap", "leaflet")
validate_map_style("amap://styles/normal", "gaode")

## Check compatibility across providers
validator <- get_style_validator()
compatibility <- validator$get_style_compatibility("streets")
print(compatibility)

}

\donttest{
# Validate generic style names
is_valid <- validate_map_style("streets", "mapbox")
print(is_valid)

# Validate provider-specific styles
mapbox_valid <- validate_map_style("mapbox://styles/mapbox/dark-v10", "mapbox")
leaflet_valid <- validate_map_style("OpenStreetMap", "leaflet")

# Get detailed validation results
validation <- validate_map_style("satellite", "gaode", detailed = TRUE)
print(validation)

# Validate custom style object
custom_style <- list(
  version = 8,
  sources = list(),
  layers = list()
)
custom_valid <- validate_map_style(custom_style, "mapbox")
}

}
