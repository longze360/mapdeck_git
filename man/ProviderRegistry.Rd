% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/provider-factory.R
\name{ProviderRegistry}
\alias{ProviderRegistry}
\title{Provider Registry Class}
\description{
The ProviderRegistry class maintains a registry of all available map providers,
their configurations, and factory functions. It provides methods for
registering new providers and retrieving provider information.
}
\details{
R6 class for managing the registry of available map providers.
}
\examples{
\donttest{
# Create and use provider registry
registry <- ProviderRegistry$new()
registry$register_provider("custom", CustomProvider, custom_config)
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{providers}}{List of registered provider configurations}

\item{\code{factories}}{List of provider factory functions}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ProviderRegistry-new}{\code{ProviderRegistry$new()}}
\item \href{#method-ProviderRegistry-register_provider}{\code{ProviderRegistry$register_provider()}}
\item \href{#method-ProviderRegistry-unregister_provider}{\code{ProviderRegistry$unregister_provider()}}
\item \href{#method-ProviderRegistry-is_registered}{\code{ProviderRegistry$is_registered()}}
\item \href{#method-ProviderRegistry-get_provider_config}{\code{ProviderRegistry$get_provider_config()}}
\item \href{#method-ProviderRegistry-get_provider_factory}{\code{ProviderRegistry$get_provider_factory()}}
\item \href{#method-ProviderRegistry-list_providers}{\code{ProviderRegistry$list_providers()}}
\item \href{#method-ProviderRegistry-get_all_capabilities}{\code{ProviderRegistry$get_all_capabilities()}}
\item \href{#method-ProviderRegistry-register_default_providers}{\code{ProviderRegistry$register_default_providers()}}
\item \href{#method-ProviderRegistry-clone}{\code{ProviderRegistry$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderRegistry-new"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderRegistry-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderRegistry$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
New ProviderRegistry instance
Register Provider

Register a new provider with its configuration and factory function.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderRegistry-register_provider"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderRegistry-register_provider}{}}}
\subsection{Method \code{register_provider()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderRegistry$register_provider(name, provider_class, config)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character string identifying the provider}

\item{\code{provider_class}}{R6 class for the provider}

\item{\code{config}}{ProviderConfig object for the provider}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Unregister Provider

Remove a provider from the registry.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderRegistry-unregister_provider"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderRegistry-unregister_provider}{}}}
\subsection{Method \code{unregister_provider()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderRegistry$unregister_provider(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character string identifying the provider to remove}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Check Provider Registration

Check if a provider is registered.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderRegistry-is_registered"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderRegistry-is_registered}{}}}
\subsection{Method \code{is_registered()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderRegistry$is_registered(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character string identifying the provider}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical indicating if provider is registered
Get Provider Configuration

Get configuration for a registered provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderRegistry-get_provider_config"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderRegistry-get_provider_config}{}}}
\subsection{Method \code{get_provider_config()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderRegistry$get_provider_config(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character string identifying the provider}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ProviderConfig object or NULL if not found
Get Provider Factory

Get factory function for a registered provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderRegistry-get_provider_factory"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderRegistry-get_provider_factory}{}}}
\subsection{Method \code{get_provider_factory()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderRegistry$get_provider_factory(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character string identifying the provider}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
R6 class generator or NULL if not found
List Registered Providers

Get list of all registered provider names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderRegistry-list_providers"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderRegistry-list_providers}{}}}
\subsection{Method \code{list_providers()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderRegistry$list_providers()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector of provider names
Get Provider Capabilities

Get capabilities for all registered providers.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderRegistry-get_all_capabilities"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderRegistry-get_all_capabilities}{}}}
\subsection{Method \code{get_all_capabilities()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderRegistry$get_all_capabilities()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named list of provider capabilities
Register Default Providers

Register all default providers with their configurations.
This is called automatically during initialization.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderRegistry-register_default_providers"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderRegistry-register_default_providers}{}}}
\subsection{Method \code{register_default_providers()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderRegistry$register_default_providers()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible self for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProviderRegistry-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ProviderRegistry-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProviderRegistry$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
