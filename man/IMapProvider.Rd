% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/provider-interface.R
\name{IMapProvider}
\alias{IMapProvider}
\title{Base Provider Interface}
\description{
The IMapProvider class defines the contract that all map providers must follow.
It includes methods for initialization, map creation, layer management, and cleanup.
}
\details{
Abstract base class that defines the interface all map providers must implement.
This ensures consistent behavior across different mapping backends.
}
\examples{
\donttest{
# This is an abstract class - use concrete implementations like MapboxProvider
# provider <- MapboxProvider$new()
# provider$initialize(config = list(token = "your_token"))
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{provider_name}}{Character string identifying the provider type}

\item{\code{config}}{List containing provider-specific configuration}

\item{\code{capabilities}}{List of supported features and limitations}

\item{\code{initialized}}{Logical indicating if provider is initialized}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-IMapProvider-initialize_provider}{\code{IMapProvider$initialize_provider()}}
\item \href{#method-IMapProvider-create_map}{\code{IMapProvider$create_map()}}
\item \href{#method-IMapProvider-update_style}{\code{IMapProvider$update_style()}}
\item \href{#method-IMapProvider-add_layer}{\code{IMapProvider$add_layer()}}
\item \href{#method-IMapProvider-remove_layer}{\code{IMapProvider$remove_layer()}}
\item \href{#method-IMapProvider-set_view}{\code{IMapProvider$set_view()}}
\item \href{#method-IMapProvider-get_available_styles}{\code{IMapProvider$get_available_styles()}}
\item \href{#method-IMapProvider-validate_config}{\code{IMapProvider$validate_config()}}
\item \href{#method-IMapProvider-destroy}{\code{IMapProvider$destroy()}}
\item \href{#method-IMapProvider-get_capabilities}{\code{IMapProvider$get_capabilities()}}
\item \href{#method-IMapProvider-is_initialized}{\code{IMapProvider$is_initialized()}}
\item \href{#method-IMapProvider-clone}{\code{IMapProvider$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-initialize_provider"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-initialize_provider}{}}}
\subsection{Method \code{initialize_provider()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$initialize_provider(config = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{List containing provider-specific configuration}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Create Map Instance

Create a new map instance with specified options.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-create_map"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-create_map}{}}}
\subsection{Method \code{create_map()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$create_map(container, options = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{container}}{Character string identifying the HTML container}

\item{\code{options}}{List of map initialization options}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Map instance object
Update Map Style

Update the map style/theme.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-update_style"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-update_style}{}}}
\subsection{Method \code{update_style()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$update_style(style)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{style}}{Character string or list specifying the new style}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Add Layer to Map

Add a deck.gl layer to the map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-add_layer"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-add_layer}{}}}
\subsection{Method \code{add_layer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$add_layer(layer)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layer}}{List containing layer configuration}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Remove Layer from Map

Remove a layer from the map by its ID.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-remove_layer"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-remove_layer}{}}}
\subsection{Method \code{remove_layer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$remove_layer(layer_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layer_id}}{Character string identifying the layer to remove}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Set Map View

Set the map view state (location, zoom, pitch, bearing).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-set_view"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-set_view}{}}}
\subsection{Method \code{set_view()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$set_view(longitude, latitude, zoom, pitch = 0, bearing = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{longitude}}{Numeric longitude coordinate}

\item{\code{latitude}}{Numeric latitude coordinate}

\item{\code{zoom}}{Numeric zoom level}

\item{\code{pitch}}{Numeric pitch angle (0-60 degrees)}

\item{\code{bearing}}{Numeric bearing angle (0-360 degrees)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Get Available Styles

Get list of available styles for this provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-get_available_styles"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-get_available_styles}{}}}
\subsection{Method \code{get_available_styles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$get_available_styles()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector of available style names
Validate Configuration

Validate provider-specific configuration.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-validate_config"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-validate_config}{}}}
\subsection{Method \code{validate_config()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$validate_config(config)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{List containing configuration to validate}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical indicating if configuration is valid
Destroy Provider

Clean up resources and destroy the provider instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-destroy"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-destroy}{}}}
\subsection{Method \code{destroy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$destroy()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible NULL
Get Provider Capabilities

Get the capabilities and limitations of this provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-get_capabilities"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-get_capabilities}{}}}
\subsection{Method \code{get_capabilities()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$get_capabilities()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List containing capability information
Check if Provider is Initialized

Check if the provider has been properly initialized.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-is_initialized"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-is_initialized}{}}}
\subsection{Method \code{is_initialized()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$is_initialized()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical indicating initialization status
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IMapProvider-clone"></a>}}
\if{latex}{\out{\hypertarget{method-IMapProvider-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IMapProvider$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
