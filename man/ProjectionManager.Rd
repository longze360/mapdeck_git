% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/projection-manager.R
\name{ProjectionManager}
\alias{ProjectionManager}
\title{Projection Management System}
\description{
Projection Management System

Projection Management System
}
\details{
Manages map projections and coordinate system transformations for different
mapping providers. This class handles the complexity of working with different
coordinate reference systems and ensures proper projection handling.


The ProjectionManager provides a unified interface for handling map projections
across different providers. It automatically detects appropriate projections
and handles transformations between different coordinate systems.
}
\examples{
\donttest{
# Create projection manager
proj_manager <- ProjectionManager$new()

# Get projection for a provider
mapbox_proj <- proj_manager$get_provider_projection("mapbox")
gaode_proj <- proj_manager$get_provider_projection("gaode")

# Transform data for a specific provider
data <- data.frame(lon = c(116.3974, 121.4737), lat = c(39.9093, 31.2304))
transformed_data <- proj_manager$prepare_data_for_provider(data, "gaode")
}

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ProjectionManager-new}{\code{ProjectionManager$new()}}
\item \href{#method-ProjectionManager-get_provider_projection}{\code{ProjectionManager$get_provider_projection()}}
\item \href{#method-ProjectionManager-get_all_provider_projections}{\code{ProjectionManager$get_all_provider_projections()}}
\item \href{#method-ProjectionManager-prepare_data_for_provider}{\code{ProjectionManager$prepare_data_for_provider()}}
\item \href{#method-ProjectionManager-transform_between_providers}{\code{ProjectionManager$transform_between_providers()}}
\item \href{#method-ProjectionManager-requires_transformation}{\code{ProjectionManager$requires_transformation()}}
\item \href{#method-ProjectionManager-get_supported_providers}{\code{ProjectionManager$get_supported_providers()}}
\item \href{#method-ProjectionManager-validate_coordinates_for_provider}{\code{ProjectionManager$validate_coordinates_for_provider()}}
\item \href{#method-ProjectionManager-clone}{\code{ProjectionManager$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectionManager-new"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectionManager-new}{}}}
\subsection{Method \code{new()}}{
Initialize the projection manager
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectionManager$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectionManager-get_provider_projection"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectionManager-get_provider_projection}{}}}
\subsection{Method \code{get_provider_projection()}}{
Get the coordinate system used by a specific provider
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectionManager$get_provider_projection(provider)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider}}{Provider name ("mapbox", "leaflet", "openlayers", "gaode", "baidu")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of coordinate system ("WGS84", "GCJ02", "BD09")
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectionManager-get_all_provider_projections"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectionManager-get_all_provider_projections}{}}}
\subsection{Method \code{get_all_provider_projections()}}{
Get all supported providers and their projections
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectionManager$get_all_provider_projections()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named list of provider projections
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectionManager-prepare_data_for_provider"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectionManager-prepare_data_for_provider}{}}}
\subsection{Method \code{prepare_data_for_provider()}}{
Prepare spatial data for a specific provider by transforming coordinates
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectionManager$prepare_data_for_provider(
  data,
  provider,
  lon_col = NULL,
  lat_col = NULL,
  source_crs = "WGS84"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Data frame or matrix with coordinate columns}

\item{\code{provider}}{Target provider name}

\item{\code{lon_col}}{Name or index of longitude column (default: "lon" or 1)}

\item{\code{lat_col}}{Name or index of latitude column (default: "lat" or 2)}

\item{\code{source_crs}}{Source coordinate system (default: "WGS84")}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Data with coordinates transformed for the target provider
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectionManager-transform_between_providers"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectionManager-transform_between_providers}{}}}
\subsection{Method \code{transform_between_providers()}}{
Transform coordinates from one provider's system to another
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectionManager$transform_between_providers(
  coords,
  from_provider,
  to_provider
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{coords}}{Coordinates to transform (vector or matrix)}

\item{\code{from_provider}}{Source provider name}

\item{\code{to_provider}}{Target provider name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Transformed coordinates
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectionManager-requires_transformation"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectionManager-requires_transformation}{}}}
\subsection{Method \code{requires_transformation()}}{
Check if a provider requires coordinate transformation from WGS84
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectionManager$requires_transformation(provider)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider}}{Provider name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical indicating if transformation is needed
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectionManager-get_supported_providers"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectionManager-get_supported_providers}{}}}
\subsection{Method \code{get_supported_providers()}}{
Get supported providers
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectionManager$get_supported_providers()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Character vector of supported provider names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectionManager-validate_coordinates_for_provider"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectionManager-validate_coordinates_for_provider}{}}}
\subsection{Method \code{validate_coordinates_for_provider()}}{
Validate that coordinates are appropriate for a provider
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectionManager$validate_coordinates_for_provider(
  coords,
  provider,
  tolerance_meters = 1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{coords}}{Coordinates to validate}

\item{\code{provider}}{Provider name}

\item{\code{tolerance_meters}}{Tolerance for validation in meters (default: 1.0)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical indicating if coordinates are valid
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ProjectionManager-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ProjectionManager-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectionManager$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
