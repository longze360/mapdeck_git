% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_styles.R, R/style-management.R
\name{apply_map_theme}
\alias{apply_map_theme}
\title{Apply Map Theme}
\usage{
apply_map_theme(map, theme_name, provider = NULL)

apply_map_theme(map, theme_name, provider = NULL)
}
\arguments{
\item{map}{A mapdeck map object}

\item{theme_name}{Character string identifying the theme to apply.
Available themes: "light", "dark", "satellite".}

\item{provider}{Character string identifying the provider (optional, 
auto-detected from map if not specified).}
}
\value{
List containing theme configuration for the provider.

Updated mapdeck map object with theme applied
}
\description{
Apply a consistent theme across different map providers.

This function applies a predefined theme to a map, ensuring consistent
visual appearance across different providers. Themes include coordinated
color schemes, styles, and visual elements.
}
\details{
Apply a consistent theme across different map providers.


Available themes:
\itemize{
  \item \strong{light}: Bright theme with high contrast, suitable for detailed data visualization
  \item \strong{dark}: Dark theme with muted colors, reduces eye strain and highlights data
  \item \strong{satellite}: Earth-toned theme optimized for satellite imagery backgrounds
}

Each theme includes:
\itemize{
  \item Provider-appropriate base map style
  \item Coordinated color palette for data layers
  \item Consistent typography and UI elements
  \item Optimized contrast and readability
}
}
\examples{
\donttest{

## Apply themes to different providers
apply_map_theme("dark", "mapbox")
apply_map_theme("light", "leaflet")
apply_map_theme("satellite", "openlayers")

## Get available themes
theme_manager <- get_theme_manager()
available_themes <- theme_manager$get_available_themes()
print(available_themes)

}

\donttest{
# Apply dark theme to map
map <- mapdeck(provider = "mapbox", token = "your_token")
dark_map <- apply_map_theme(map, "dark")

# Apply satellite theme
satellite_map <- apply_map_theme(map, "satellite")

# Apply theme to different providers
leaflet_map <- mapdeck(provider = "leaflet")
themed_leaflet <- apply_map_theme(leaflet_map, "light")
}

}
