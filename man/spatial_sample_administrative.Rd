% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial-sampling-engine.R
\name{spatial_sample_administrative}
\alias{spatial_sample_administrative}
\title{Administrative Boundary Sampling}
\usage{
spatial_sample_administrative(
  admin_polygons,
  total_samples,
  allocation_method = "proportional",
  weight_column = NULL,
  admin_column = NULL,
  concurrent = FALSE,
  use_gpu = TRUE,
  seed = NULL
)
}
\arguments{
\item{admin_polygons}{sf object with administrative polygons}

\item{total_samples}{Integer total number of samples to generate}

\item{allocation_method}{Method for allocating samples: "proportional", 
"equal", or "custom"}

\item{weight_column}{Column name for custom weights (required for "custom")}

\item{admin_column}{Column name for administrative unit identifiers}

\item{concurrent}{Logical indicating if concurrent processing should be used}

\item{use_gpu}{Logical indicating if GPU acceleration should be used}

\item{seed}{Optional random seed for reproducibility}
}
\value{
sf object with sampled points including administrative unit info
}
\description{
Perform spatial sampling within administrative boundaries with support for
different allocation strategies.
}
\examples{
\donttest{
# Load administrative boundaries (example with mock data)
library(sf)

# Create mock administrative polygons
admin_bounds <- data.frame(
  admin_id = c("A", "B", "C"),
  area = c(100, 200, 150)
)

# Convert to sf polygons (simplified example)
coords_list <- list(
  matrix(c(0,0, 1,0, 1,1, 0,1, 0,0), ncol=2, byrow=TRUE),
  matrix(c(1,0, 3,0, 3,2, 1,2, 1,0), ncol=2, byrow=TRUE),
  matrix(c(0,1, 2,1, 2,2.5, 0,2.5, 0,1), ncol=2, byrow=TRUE)
)

polygons <- lapply(coords_list, function(x) st_polygon(list(x)))
admin_sf <- st_sf(admin_bounds, geometry = st_sfc(polygons))

# Proportional allocation (default)
prop_samples <- spatial_sample_administrative(admin_sf, total_samples = 100)

# Equal allocation
equal_samples <- spatial_sample_administrative(admin_sf, 
                                               total_samples = 90,
                                               allocation_method = "equal")

# Custom allocation based on area column
custom_samples <- spatial_sample_administrative(admin_sf, 
                                                total_samples = 120,
                                                allocation_method = "custom",
                                                weight_column = "area")
}

}
