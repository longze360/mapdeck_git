% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/leaflet-provider.R
\name{LeafletProvider}
\alias{LeafletProvider}
\title{Leaflet Provider Class}
\description{
The LeafletProvider class provides Leaflet.js integration through the
provider interface with deck.gl overlay support. It supports various
tile providers and Leaflet-specific features.
}
\details{
R6 class implementing the IMapProvider interface for Leaflet.js.
}
\examples{
\donttest{
# Create Leaflet provider
provider <- LeafletProvider$new()
provider$initialize_provider(list(tile_provider = "OpenStreetMap"))
}

}
\section{Super class}{
\code{\link[mapdeck:IMapProvider]{mapdeck::IMapProvider}} -> \code{LeafletProvider}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{leaflet_config}}{Leaflet-specific configuration}

\item{\code{tile_provider}}{Current tile provider configuration}

\item{\code{current_style}}{Current map style/tile layer}

\item{\code{layers}}{List of active deck.gl layers}

\item{\code{map_instance}}{Reference to the map instance}

\item{\code{leaflet_config}}{Leaflet configuration}

\item{\code{tile_provider}}{Tile provider configuration}

\item{\code{current_style}}{Current map style}

\item{\code{layers}}{Active layers list}

\item{\code{map_instance}}{Map instance reference
Initialize Constructor

R6 constructor - sets up basic structure without full initialization.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LeafletProvider-new}{\code{LeafletProvider$new()}}
\item \href{#method-LeafletProvider-initialize_provider}{\code{LeafletProvider$initialize_provider()}}
\item \href{#method-LeafletProvider-create_map}{\code{LeafletProvider$create_map()}}
\item \href{#method-LeafletProvider-update_style}{\code{LeafletProvider$update_style()}}
\item \href{#method-LeafletProvider-add_layer}{\code{LeafletProvider$add_layer()}}
\item \href{#method-LeafletProvider-remove_layer}{\code{LeafletProvider$remove_layer()}}
\item \href{#method-LeafletProvider-set_view}{\code{LeafletProvider$set_view()}}
\item \href{#method-LeafletProvider-get_available_styles}{\code{LeafletProvider$get_available_styles()}}
\item \href{#method-LeafletProvider-get_tile_provider_config}{\code{LeafletProvider$get_tile_provider_config()}}
\item \href{#method-LeafletProvider-create_custom_tile_layer}{\code{LeafletProvider$create_custom_tile_layer()}}
\item \href{#method-LeafletProvider-set_tile_provider_options}{\code{LeafletProvider$set_tile_provider_options()}}
\item \href{#method-LeafletProvider-validate_config}{\code{LeafletProvider$validate_config()}}
\item \href{#method-LeafletProvider-destroy}{\code{LeafletProvider$destroy()}}
\item \href{#method-LeafletProvider-clone}{\code{LeafletProvider$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mapdeck" data-topic="IMapProvider" data-id="get_capabilities"><a href='../../mapdeck/html/IMapProvider.html#method-IMapProvider-get_capabilities'><code>mapdeck::IMapProvider$get_capabilities()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mapdeck" data-topic="IMapProvider" data-id="is_initialized"><a href='../../mapdeck/html/IMapProvider.html#method-IMapProvider-is_initialized'><code>mapdeck::IMapProvider$is_initialized()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-new"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
New LeafletProvider instance
Initialize Provider

Initialize the Leaflet provider with configuration settings.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-initialize_provider"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-initialize_provider}{}}}
\subsection{Method \code{initialize_provider()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$initialize_provider(config = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{List containing Leaflet-specific configuration}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Create Map Instance

Create a new Leaflet map instance with deck.gl overlay.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-create_map"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-create_map}{}}}
\subsection{Method \code{create_map()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$create_map(container = NULL, options = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{container}}{Character string identifying the HTML container}

\item{\code{options}}{List of map initialization options}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Map instance object (htmlwidget)
Update Map Style

Update the Leaflet map tile provider/style.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-update_style"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-update_style}{}}}
\subsection{Method \code{update_style()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$update_style(style)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{style}}{Character string specifying the new tile provider}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Add Layer to Map

Add a deck.gl layer to the Leaflet map.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-add_layer"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-add_layer}{}}}
\subsection{Method \code{add_layer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$add_layer(layer)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layer}}{List containing layer configuration}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Remove Layer from Map

Remove a layer from the Leaflet map by its ID.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-remove_layer"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-remove_layer}{}}}
\subsection{Method \code{remove_layer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$remove_layer(layer_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layer_id}}{Character string identifying the layer to remove}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Set Map View

Set the Leaflet map view state.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-set_view"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-set_view}{}}}
\subsection{Method \code{set_view()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$set_view(longitude, latitude, zoom, pitch = 0, bearing = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{longitude}}{Numeric longitude coordinate}

\item{\code{latitude}}{Numeric latitude coordinate}

\item{\code{zoom}}{Numeric zoom level}

\item{\code{pitch}}{Numeric pitch angle (ignored for Leaflet)}

\item{\code{bearing}}{Numeric bearing angle (ignored for Leaflet)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Get Available Styles

Get list of available Leaflet tile providers with enhanced categorization.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-get_available_styles"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-get_available_styles}{}}}
\subsection{Method \code{get_available_styles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$get_available_styles(
  category = NULL,
  include_api_key_required = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{category}}{Character string to filter by category (optional)}

\item{\code{include_api_key_required}}{Logical indicating if providers requiring API keys should be included}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character vector of available tile provider names or named list if categorized
Get Tile Provider Configuration

Get detailed configuration for a specific tile provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-get_tile_provider_config"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-get_tile_provider_config}{}}}
\subsection{Method \code{get_tile_provider_config()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$get_tile_provider_config(provider_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{provider_name}}{Character string identifying the tile provider}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List containing provider configuration details
Create Custom Tile Layer

Create a custom tile layer configuration.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-create_custom_tile_layer"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-create_custom_tile_layer}{}}}
\subsection{Method \code{create_custom_tile_layer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$create_custom_tile_layer(
  url,
  attribution = "",
  max_zoom = 18,
  min_zoom = 1,
  api_key = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{Character string containing tile URL template}

\item{\code{attribution}}{Character string for attribution text}

\item{\code{max_zoom}}{Numeric maximum zoom level}

\item{\code{min_zoom}}{Numeric minimum zoom level}

\item{\code{api_key}}{Character string for API key (if required)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List containing custom tile layer configuration
Set Tile Provider Options

Set advanced options for the current tile provider.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-set_tile_provider_options"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-set_tile_provider_options}{}}}
\subsection{Method \code{set_tile_provider_options()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$set_tile_provider_options(options)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{options}}{List containing tile provider options}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self for method chaining
Validate Configuration

Validate Leaflet-specific configuration.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-validate_config"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-validate_config}{}}}
\subsection{Method \code{validate_config()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$validate_config(config)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config}}{List containing configuration to validate}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical indicating if configuration is valid
Destroy Provider

Clean up resources and destroy the Leaflet provider instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-destroy"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-destroy}{}}}
\subsection{Method \code{destroy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$destroy()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LeafletProvider-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LeafletProvider-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LeafletProvider$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
