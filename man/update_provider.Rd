% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/provider-switching.R
\name{update_provider}
\alias{update_provider}
\title{Update Map Provider}
\usage{
update_provider(
  map,
  new_provider,
  config = list(),
  preserve_layers = TRUE,
  transform_coordinates = TRUE,
  fallback_on_error = TRUE
)
}
\arguments{
\item{map}{A mapdeck map object}

\item{new_provider}{Character string identifying the new provider}

\item{config}{List containing provider-specific configuration (optional)}

\item{preserve_layers}{Logical indicating if layers should be preserved}

\item{transform_coordinates}{Logical indicating if coordinates should be transformed}

\item{fallback_on_error}{Logical indicating if fallback should be used on errors}
}
\value{
Updated mapdeck map object with new provider
}
\description{
This function allows switching between different map providers (Mapbox, Leaflet,
OpenLayers, Gaode, Baidu) while maintaining all existing layers, styling,
and map state. It handles provider compatibility checking, coordinate
transformations, and graceful degradation for unsupported features.
}
\details{
Seamlessly switch the map provider while preserving all layers and settings.
}
\examples{
\donttest{
# Create a map with Mapbox
map <- mapdeck(provider = "mapbox", token = "your_token")
map <- add_scatterplot(map, data = capitals, lon = "lon", lat = "lat")

# Switch to Leaflet while preserving layers
map <- update_provider(map, "leaflet")

# Switch to Gaode with custom configuration
map <- update_provider(map, "gaode", 
                      config = list(api_key = "your_gaode_key"))
}

}
